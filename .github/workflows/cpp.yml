name: Check c++ pkg PROPOSAL.

on: [push]

jobs:
    build:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          include:
            - os : "ubuntu-latest"
              compiler : "gcc"
              compilerpp : "g++"
            - os : "macos-latest"
              compiler : "clang"
              compilerpp : "clang++"
            - os : "ubuntu-20.04"
              compiler : "gcc-7"
              compilerpp : "g++-7"
            - os : "ubuntu-20.04"
              compiler : "gcc-5"
              compilerpp : "g++-5"
            - os : "windows-latest"
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilerpp }}
      steps:
        - uses: actions/checkout@v2
        - name: Install gcc-5
          if : ${{ matrix.compiler == 'gcc-5' }}
          run: |
            sudo echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main" >> /etc/apt/sources.list
            sudo echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe" >> /etc/apt/sources.list
            sudo apt update
            sudo apt install g++-5
            sudo apt install gcc-5
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20
            sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
            sudo update-alternatives --set cc /usr/bin/gcc
            sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
            sudo update-alternatives --set c++ /usr/bin/g++
        - name: Cache conan
          if: ${{ matrix.os != 'windows-latest' }}
          id: cache-conan
          uses: actions/cache@v2
          with:
            path: ~/.conan
            key: ${{ runner.os }}-cache-conan-${{ matrix.compiler }}-${{ hashFiles('conanfile.py') }}-key
        - name: Cache build
          id: cache-build
          uses: actions/cache@v2
          with:
            path: PROPOSAL_BUILD
            key: ${{ runner.os }}-cache-build-${{ matrix.compiler }}-${{ github.sha }}-key
        - uses: actions/setup-python@v2
          with:
            python-version: '3.7'
        - name: Install python dependencies
          run: python -m pip install conan
        - name: Initialize conan
          if : steps.cache-conan.outputs.cache-hit != 'true'
          run: conan profile new default --detect
        - name: Update conan profile
          if : ${{ matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-latest' }}
          run: conan profile update settings.compiler.libcxx=libstdc++11 default
        - name: Update conan profile
          run: conan profile update settings.compiler.cppstd=14 default
        - name: create build directory
          if : steps.cache-build.outputs.cache-hit != 'true'
          run: mkdir PROPOSAL_BUILD
        - name: Install PROPOSAL dependencies
          run: cd PROPOSAL_BUILD && conan install .. -o with_testing=True --build=missing
        - name: Run build automatisation tool
          run: cmake . -B PROPOSAL_BUILD -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_TESTING=TRUE
        - name: Build lib
          if: ${{ matrix.os != 'windows-latest' }}
          run: cmake --build PROPOSAL_BUILD
        - name: Build lib
          if: ${{ matrix.os == 'windows-latest' }}
          run: cmake --build PROPOSAL_BUILD --target ALL_BUILD --config Release

    test:
      runs-on: ${{ matrix.os }}
      needs: build
      strategy:
        matrix:
          include:
            - os : "ubuntu-latest"
              compiler : "gcc"
              compilerpp : "g++"
            - os : "macos-latest"
              compiler : "clang"
              compilerpp : "clang++"
            - os : "ubuntu-20.04"
              compiler : "gcc-7"
              compilerpp : "g++-7"
            - os : "ubuntu-20.04"
              compiler : "gcc-5"
              compilerpp : "g++-5"
            - os : "windows-latest"
      env:
        PROPOSAL_TEST_FILES: ${{ github.workspace }}/PROPOSAL_BUILD/tests/TestFiles
      steps:
        - uses: actions/checkout@v2
        - name: Cache conan
          if: ${{ matrix.os != 'windows-latest' }}
          id: cache-conan
          uses: actions/cache@v2
          with:
            path: ~/.conan
            key: ${{ runner.os }}-cache-conan-${{ matrix.compiler }}-${{ hashFiles('conanfile.py') }}-key
        - name: Cache build
          id: cache-build
          uses: actions/cache@v2
          with:
            path: PROPOSAL_BUILD
            key: ${{ runner.os }}-cache-build-${{ matrix.compiler }}-${{ github.sha }}-key
        - name: Run tests
          run: ctest --test-dir PROPOSAL_BUILD -j2 --verbose -E "(Brems.*Interpolant|Photo.*Interpolant|Epair.*Interpolant|Mupair.*Interpolant)"
