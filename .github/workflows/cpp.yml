name: Check c++ pkg PROPOSAL.


on: [push]

jobs:

    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Cache conan
          id: cache-conan
          uses: actions/cache@v2
          with:
            path: ~/.conan
            key: ${{ runner.os }}-cache-conan
        - name: Cache PROPOSAL build directory
          id: cache-proposal
          uses: actions/cache@v2
          with:
            path: PROPOSAL_BUILD
            key: ${{ runner.os }}-cache-proposal-${{ github.run_id }}
        - name: Install python dependencies
          run: python -m pip install conan
        - name: Initialize conan
          if : steps.cache-conan.outputs.cache-hit != 'true'
          run: |
            conan profile new default --detect
            conan profile update settings.compiler.libcxx=libstdc++11 default
        - name: Create PROPOSAL package directory
          if : steps.cache-proposal.outputs.cache-hit != 'true'
          run: mkdir -p PROPOSAL_BUILD
        - name: Install PROPOSAL dependencies
          run: cd PROPOSAL_BUILD && conan install ..
        - name: Run build automatisation tool
          run: cmake . -B PROPOSAL_BUILD
        - name: Build lib
          run: make -C PROPOSAL_BUILD -j


    test:
      runs-on: ubuntu-latest
      needs: build
      env:
        PROPOSAL_TEST_FILES: ${{ github.workspace }}/PROPOSAL_BUILD/tests/TestFiles
      steps:
        - uses: actions/checkout@master
        - name: Cache conan
          id: cache-conan
          uses: actions/cache@v2
          with:
            path: ~/.conan
            key: ${{ runner.os }}-cache-conan
        - name: Cache PROPOSAL build directory
          id: cache-proposal
          uses: actions/cache@v2
          with:
            path: PROPOSAL_BUILD
            key: ${{ runner.os }}-cache-proposal-${{ github.run_id }}
        - name: Install gtest
          run: sudo apt-get install libgtest-dev
        - name: Rerun cmake
          run: cmake . -B PROPOSAL_BUILD -DBUILD_TESTING=True
        - name: Build lib
          run: make -C PROPOSAL_BUILD -j
        - name: Run tests
          run: ctest --test-dir PROPOSAL_BUILD -j2

    build-n-publish:
      name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
      # needs: test
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      # - name: Install pypa/build
      #   run: python -m pip install build --user
      # - name: Build a binary wheel and a source tarball
      #   run: python -m build --sdist --wheel --outdir dist .
      - name: Build source tarball
        run: python setup.py sdist
      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      # - name: Publish distribution üì¶ to PyPI
      #   if: startsWith(github.ref, 'refs/tags')
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
