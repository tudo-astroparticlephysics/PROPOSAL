name: Check c++ pkg PROPOSAL.


on: [push]


jobs:
    build:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          include:
            - os : "ubuntu-latest"
              compiler : "gcc"
              compilerpp : "g++"
              do_tests : "true"
            - os : "macos-latest"
              compiler : "clang"
              compilerpp : "clang++"
              do_tests : "true"
            - os : "ubuntu-18.04"
              compiler : "gcc-7"
              compilerpp : "g++-7"
              do_tests : "false" # tests only work for c++17 compatible compiler
      env:
        PROPOSAL_TEST_FILES: ${{ github.workspace }}/PROPOSAL_BUILD/tests/TestFiles
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilerpp }}
      steps:
        - uses: actions/checkout@v2
        - name: Cache conan
          id: cache-conan
          uses: actions/cache@v2
          with:
            path: ~/.conan
            key: ${{ runner.os }}-cache-conan-${{ matrix.compiler }}
        - name: Cache build
          id: cache-build
          uses: actions/cache@v2
          with:
            path: PROPOSAL_BUILD
            key: ${{ runner.os }}-cache-build-${{ matrix.compiler }}
        - uses: actions/setup-python@v2
          with:
            python-version: '3.7'
        - name: Install python dependencies
          run: python -m pip install conan
        - name: Initialize conan
          if : steps.cache-conan.outputs.cache-hit != 'true'
          run: conan profile new default --detect
        - name: Update conan profile
          if : ${{ matrix.compiler != 'clang' }}
          run: conan profile update settings.compiler.libcxx=libstdc++11 default
        - name: create build directory
          if : steps.cache-build.outputs.cache-hit != 'true'
          run: mkdir PROPOSAL_BUILD
        - name: Install PROPOSAL dependencies
          run: cd PROPOSAL_BUILD && conan install .. -o with_testing=${{ matrix.do_tests }} --build=missing
        - name: Run build automatisation tool
          run: cmake . -B PROPOSAL_BUILD -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_TESTING=${{ matrix.do_tests }}
        - name: Build lib
          run: make -C PROPOSAL_BUILD

        - name: Run tests
          if : ${{ matrix.do_tests == 'true' }}
          run: ctest --test-dir PROPOSAL_BUILD -j2 --verbose -E "(Brems|Photo|Epair|Mupair)"
